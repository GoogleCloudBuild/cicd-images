# syntax=docker/dockerfile:1
#
# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Download GCR Creds helper
# hadolint ignore=DL3006
FROM base as downloader
# hadolint ignore=DL3002
USER root
ARG CREDS_GCR_VERSION='2.1.22'
# hadolint ignore=DL3008,DL4006
RUN set -eux; \
    \
    install -m 0755 -d /etc/apt/keyrings; \
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg ; \
    \
    CREDS_GCR_FILE="docker-credential-gcr_linux_amd64-${CREDS_GCR_VERSION}.tar.gz"; \
    url="https://github.com/GoogleCloudPlatform/docker-credential-gcr/releases/download/v${CREDS_GCR_VERSION}/${CREDS_GCR_FILE}"; \
    checksum_url="https://github.com/GoogleCloudPlatform/docker-credential-gcr/releases/download/v${CREDS_GCR_VERSION}/checksums.txt"; \
    \
    curl -Ls -o /tmp/docker-credential-gcr.tar.gz  $url;  \
    \
    CREDS_GCR_SHA=$(curl -Ls $checksum_url|grep "${CREDS_GCR_FILE}$"|awk '{print $1}'); \
    echo "${CREDS_GCR_SHA} "'/tmp/docker-credential-gcr.tar.gz' | sha256sum -c -; \
    \
    tar --extract \
    --file /tmp/docker-credential-gcr.tar.gz \
    --directory /usr/local/bin/ \
    --no-same-owner \
    'docker-credential-gcr'; \
    rm -rf /tmp/docker-credential-gcr.tar.gz /var/lib/apt/lists/*;

# Docker client image build
# hadolint ignore=DL3006
FROM base

# We are going to install a number of tools as root
# and docker image is still running as root user
ENV USER=root
USER $USER

# Update base packages and install required packages
RUN apt-get update && \
    apt-get -y upgrade && \
    rm -rf /var/lib/apt/lists/*

# set versions
ARG DOCKER_VERSION='24' \
    DOCKER_BUILDX_VERSION='0' \
    DOCKER_COMPOSE_VERSION='2'

ENV DOCKER_VERSION=$DOCKER_VERSION

# Install Docker apt repo key
COPY --from=downloader /etc/apt/keyrings /etc/apt/keyrings

# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
# hadolint ignore=DL4006,SC1091
RUN set -eux; \
    echo \
    "# Add the docker repository to Apt sources:\n" \
    "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
    $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
    tee /etc/apt/sources.list.d/docker.list > /dev/null ; \
    \
    clean-install --no-install-suggests --no-install-recommends \
    docker-ce-cli="5:${DOCKER_VERSION}.*" \
    docker-compose-plugin="${DOCKER_COMPOSE_VERSION}.*" \
    docker-buildx-plugin="${DOCKER_BUILDX_VERSION}.*" \
    ; \
    ln -s /usr/libexec/docker/cli-plugins/* /usr/local/bin ; \
    docker --version; \
    docker-compose version; \
    docker-buildx version;

# Install Artifact Registry and Google Container Registry auth provider
COPY --from=downloader /usr/local/bin/docker-credential-gcr /usr/local/bin/docker-credential-gcr
RUN set -eux; \
    docker-credential-gcr version \
    docker-credential-gcr  configure-docker -include-artifact-registry;

COPY modprobe.sh /usr/local/bin/modprobe
COPY docker-entrypoint.sh /usr/local/bin/

ENV WORKDIR=/build-context
VOLUME $WORKDIR
WORKDIR $WORKDIR

ENTRYPOINT ["docker-entrypoint.sh"]
CMD ["docker"]
